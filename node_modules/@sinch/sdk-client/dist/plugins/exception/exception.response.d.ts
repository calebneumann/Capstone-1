import { PluginRunner } from '../core';
import { ResponsePlugin, ResponsePluginContext } from '../core/response-plugin';
/**
 * Plugin to fire an exception on wrong response / data
 */
export declare class ExceptionResponse<V extends Record<string, any> | undefined = Record<string, any>> implements ResponsePlugin<V | Record<string, unknown>, V> {
    private callback?;
    /**
     * Initialize an instance of the class, with an optional callback function for exception handling.
     *
     * @param {Function} [callback] - A function called in case of an exception. If provided, this function is responsible for throwing the exception or not.
     */
    constructor(callback?: ((res: V, error: Error | undefined) => V) | undefined);
    load(context: ResponsePluginContext): PluginRunner<V | Record<string, unknown>, V>;
}
