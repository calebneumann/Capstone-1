/**
 * Generic error context
 */
export interface ErrorContext {
    /** Api name */
    apiName?: string;
    /** Operation ID */
    operationId?: string;
    /** Base URL */
    url?: string;
    /** Origin domain initiating the call */
    origin?: string | null;
}
/**
 * Generic error class
 */
export declare class GenericError extends Error {
    constructor(message: string, errorContext: ErrorContext);
    private static formatUrl;
}
/**
 * Request failed error class
 */
export declare class RequestFailedError<T> extends GenericError {
    /**
     * Request status code
     */
    statusCode: number;
    /**
     * Data decoded from the response body
     */
    data?: string;
    constructor(message: string, statusCode: number, errorContext: ErrorContext, data?: T);
}
/**
 * Empty response error class
 */
export declare class EmptyResponseError<T> extends GenericError {
    /**
     * Data decoded from the response body
     */
    data?: string;
    constructor(message: string, errorContext: ErrorContext, data?: T);
}
/**
 * Response parse error class
 */
export declare class ResponseJSONParseError extends RequestFailedError<string> {
    constructor(message: string, httpStatus: number, errorContext: ErrorContext, bodyContent?: string);
}
