import { ApiClient, ApiCallParameters, ApiCallParametersWithPagination, PageResult, FileBuffer } from '../api/api-client';
import { ApiClientOptions } from '../api/api-client-options';
import FormData = require('form-data');
/** Client to process the call to the API using Fetch API */
export declare class ApiFetchClient extends ApiClient {
    /**
     * Initialize your API Client instance with the provided configuration options.
     * Default request plugins: VersionRequest
     * Default response plugins: ExceptionResponse
     *
     * @param {ApiClientOptions} options - Configuration options for the API Client.
     */
    constructor(options: ApiClientOptions);
    /** @inheritdoc */
    processCall<T>(props: ApiCallParameters): Promise<T>;
    private sinchFetch;
    processCallWithPagination<T>(props: ApiCallParametersWithPagination): Promise<PageResult<T>>;
    private sinchFetchWithPagination;
    private buildFetchError;
    private loadResponsePlugins;
    /** @inheritdoc */
    processFileCall(props: ApiCallParameters): Promise<FileBuffer>;
    private extractFileName;
    /** @inheritDoc */
    processFormData(data: any, type: string): FormData | string;
}
