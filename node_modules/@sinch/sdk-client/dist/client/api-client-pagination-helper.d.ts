import { ApiCallParametersWithPagination, ApiClient, ApiListPromise, AutoPaginationMethods, PageResult, PaginatedApiProperties, PaginationEnum } from '../api/api-client';
import { RequestOptions } from '../plugins/core/request-plugin';
export declare const createIteratorMethodsForPagination: <T>(apiClient: ApiClient, requestOptionsPromise: Promise<RequestOptions>, firstPagePromise: Promise<PageResult<T>>, context: PaginatedApiProperties) => AutoPaginationMethods<T>;
export declare const createNextPageMethod: <T>(apiClient: ApiClient, context: PaginationContext, requestOptions: RequestOptions, nextPageValue: string) => ApiListPromise<T>;
export declare function hasMore(response: any, context: PaginationContext): boolean;
export declare function calculateNextPage(response: any, context: PaginationContext): string;
export interface PaginationContext {
    pagination: PaginationEnum;
    apiName: string;
    operationId: string;
    dataKey: string;
    requestOptions: RequestOptions;
}
export declare function buildPaginationContext(props: ApiCallParametersWithPagination): PaginationContext;
export declare const buildPageResultPromise: <T>(client: ApiClient, requestOptionsPromise: Promise<RequestOptions>, operationProperties: PaginatedApiProperties, repeatParamArray?: boolean) => Promise<PageResult<T>>;
