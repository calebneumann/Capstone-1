import { RequestOptions, RequestPlugin } from '../plugins/core/request-plugin';
import { ApiCallParameters, ApiCallParametersWithPagination } from '../api/api-client';
import { ErrorContext } from '../api/api-errors';
export declare const manageExpiredToken: (apiCallParameters: ApiCallParameters | ApiCallParametersWithPagination, errorContext: ErrorContext, requestPlugins: RequestPlugin[] | undefined, requestOptions: RequestOptions, callback: (props: any) => Promise<any>) => Promise<any>;
export declare function buildErrorContext(apiCallParameters: ApiCallParameters, origin: string | null): ErrorContext;
export declare function invalidateAndRegenerateJwt(requestPlugins: RequestPlugin[] | undefined, options: RequestOptions, errorContext: ErrorContext): Promise<RequestOptions>;
/**
 * Go through all an object's properties and transform to date the values that match the right format
 * @param {any} input - the response object after all the response plugins have been run
 * @return {any} - the response where the values matching a date are revived as Date objects
 */
export declare const reviveDates: (input: any) => any;
