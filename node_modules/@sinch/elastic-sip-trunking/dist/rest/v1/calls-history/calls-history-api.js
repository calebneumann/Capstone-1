"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CallsHistoryApi = void 0;
const sdk_client_1 = require("@sinch/sdk-client");
const elastic_sip_trunking_domain_api_1 = require("../elastic-sip-trunking-domain-api");
class CallsHistoryApi extends elastic_sip_trunking_domain_api_1.ElasticSipTrunkingDomainApi {
    /**
     * Initialize your interface
     *
     * @param {SinchClientParameters} sinchClientParameters - The parameters used to initialize the API Client.
     */
    constructor(sinchClientParameters) {
        super(sinchClientParameters, 'CallsHistoryApi');
    }
    /**
     * Find calls
     * Find calls by query parameters.
     * @param { FindCallsRequestData } data - The data to provide to the API call.
     * @return { ApiListPromise<Call> }
     */
    find(data) {
        this.client = this.getSinchClient();
        data['createTime'] = data['createTime'] !== undefined ? data['createTime'] : 'now-24h';
        const getParams = this.client.extractQueryParams(data, [
            'from', 'to', 'trunkId', 'createTime', 'callResult', 'direction', 'page', 'pageSize'
        ]);
        const headers = {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
        };
        const body = '';
        const basePathUrl = `${this.client.apiClientOptions.hostname}/v1/projects/${this.client.apiClientOptions.projectId}/calls`;
        const requestOptionsPromise = this.client.prepareOptions(basePathUrl, 'GET', getParams, headers, body || undefined);
        const operationProperties = {
            pagination: sdk_client_1.PaginationEnum.PAGE2,
            apiName: this.apiName,
            operationId: 'FindCalls',
            dataKey: 'calls',
        };
        // Create the promise containing the response wrapped as a PageResult
        const listPromise = (0, sdk_client_1.buildPageResultPromise)(this.client, requestOptionsPromise, operationProperties);
        // Add properties to the Promise to offer the possibility to use it as an iterator
        Object.assign(listPromise, (0, sdk_client_1.createIteratorMethodsForPagination)(this.client, requestOptionsPromise, listPromise, operationProperties));
        return listPromise;
    }
}
exports.CallsHistoryApi = CallsHistoryApi;
//# sourceMappingURL=calls-history-api.js.map