import { AccessControlList, AddAccessControlListToTrunkRequestData, AddIpRangeToAccessControlListRequestData, CreateAccessControlListRequestData, DeleteAccessControlListRequestData, DeleteAccessControlListFromTrunkRequestData, DeleteIpRangeFromAccessControlListRequestData, ListAccessControlListRequestData, ListIpRangesForAccessControlListRequestData, UpdateAccessControlListRequestData, UpdateIpRangeFromAccessControlListRequestData, ListAccessControlListsForTrunkRequestData, AddAccessControlListToTrunk, IpRange } from '../../../models';
import { SinchClientParameters, ApiListPromise } from '@sinch/sdk-client';
import { ElasticSipTrunkingDomainApi } from '../elastic-sip-trunking-domain-api';
export declare class AccessControlListApi extends ElasticSipTrunkingDomainApi {
    private sipTrunksApi;
    /**
     * Initialize your interface
     *
     * @param {SinchClientParameters} sinchClientParameters - The parameters used to initialize the API Client.
     */
    constructor(sinchClientParameters: SinchClientParameters);
    /**
     * Add ACL to a trunk
     * Add an access control list entry to a trunk.
     * @param { AddAccessControlListToTrunkRequestData } data - The data to provide to the API call.
     */
    addToTrunk(data: AddAccessControlListToTrunkRequestData): Promise<AddAccessControlListToTrunk>;
    /**
     * List all ACLs for a trunk
     * Get all access control list entries for a trunk.
     * @param { ListAccessControlListsForTrunkRequestData } data - The data to provide to the API call.
     * @return { ApiListPromise<string> }
     */
    listForTrunk(data: ListAccessControlListsForTrunkRequestData): ApiListPromise<string>;
    /**
     * Delete ACL from trunk
     * Remove an access control list entry from a trunk.
     * @param { DeleteAccessControlListFromTrunkRequestData } data - The data to provide to the API call.
     */
    deleteFromTrunk(data: DeleteAccessControlListFromTrunkRequestData): Promise<void>;
    /**
     * Add IP range to ACL
     * Add an IP range to an access control list entry.
     * @param { AddIpRangeToAccessControlListRequestData } data - The data to provide to the API call.
     */
    addIpRange(data: AddIpRangeToAccessControlListRequestData): Promise<IpRange>;
    /**
     * Create an ACL
     * Create an access control list entry with at least one IP address or IP range.
     * @param { CreateAccessControlListRequestData } data - The data to provide to the API call.
     */
    create(data: CreateAccessControlListRequestData): Promise<AccessControlList>;
    /**
     * Delete ACL
     * Delete an access control list entry.
     * @param { DeleteAccessControlListRequestData } data - The data to provide to the API call.
     */
    delete(data: DeleteAccessControlListRequestData): Promise<void>;
    /**
     * Delete IP range from ACL
     * Remove an IP range to an access control list entry.
     * @param { DeleteIpRangeFromAccessControlListRequestData } data - The data to provide to the API call.
     */
    deleteIpRange(data: DeleteIpRangeFromAccessControlListRequestData): Promise<void>;
    /**
     * List ACLs
     * Fetches the list of Access Control List entries.
     * @param { ListAccessControlListRequestData } data - The data to provide to the API call.
     * @return { ApiListPromise<AccessControlList> }
     */
    list(data: ListAccessControlListRequestData): ApiListPromise<AccessControlList>;
    /**
     * List all IP ranges for ACL
     * Get all IP ranges for an access control list entry.
     * @param { ListIpRangesForAccessControlListRequestData } data - The data to provide to the API call.
     * @return { ApiListPromise<IpRange> }
     */
    listIpRanges(data: ListIpRangesForAccessControlListRequestData): ApiListPromise<IpRange>;
    /**
     * Update ACL
     * Create an access control list entry with at least one IP address or IP range.
     * @param { UpdateAccessControlListRequestData } data - The data to provide to the API call.
     */
    update(data: UpdateAccessControlListRequestData): Promise<AccessControlList>;
    /**
     * Update IP range
     * Update an IP range to an access control list entry.
     * @param { UpdateIpRangeFromAccessControlListRequestData } data - The data to provide to the API call.
     */
    updateIpRange(data: UpdateIpRangeFromAccessControlListRequestData): Promise<IpRange>;
}
