"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VerificationStatusApi = void 0;
const verification_domain_api_1 = require("../verification-domain-api");
class VerificationStatusApi extends verification_domain_api_1.VerificationDomainApi {
    /**
     * Initialize your interface
     *
     * @param {SinchClientParameters} sinchClientParameters - The parameters used to initialize the API Client.
     */
    constructor(sinchClientParameters) {
        super(sinchClientParameters, 'VerificationStatusApi');
    }
    /**
     * Get verification by ID
     * Queries the verification result by sending the verification ID. With this query you can get the result of a verification.
     * @param { VerificationStatusByIdRequestData } data - The data to provide to the API call.
     */
    async getById(data) {
        this.client = this.getSinchClient();
        const getParams = this.client.extractQueryParams(data, []);
        const headers = {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
        };
        const body = '';
        const path = `/verification/v1/verifications/id/${data['id']}`;
        const basePathUrl = this.client.apiClientOptions.hostname + path;
        const requestOptions = await this.client.prepareOptions(basePathUrl, 'GET', getParams, headers, body || undefined, path);
        const url = this.client.prepareUrl(requestOptions.hostname, requestOptions.queryParams);
        return this.client.processCall({
            url,
            requestOptions,
            apiName: this.apiName,
            operationId: 'VerificationStatusById',
        });
    }
    /**
     * Get verification by Identity
     * Queries the verification result by sending the verification Identity (usually a phone number) and its method. With this query you can get the result of a verification.
     * @param { VerificationStatusByIdentityRequestData } data - The data to provide to the API call.
     */
    async getByIdentity(data) {
        this.client = this.getSinchClient();
        const getParams = this.client.extractQueryParams(data, []);
        const headers = {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
        };
        const body = '';
        const path = `/verification/v1/verifications/${data['method']}/number/${data['endpoint']}`;
        const basePathUrl = this.client.apiClientOptions.hostname + path;
        const requestOptions = await this.client.prepareOptions(basePathUrl, 'GET', getParams, headers, body || undefined, path);
        const url = this.client.prepareUrl(requestOptions.hostname, requestOptions.queryParams);
        return this.client.processCall({
            url,
            requestOptions,
            apiName: this.apiName,
            operationId: 'VerificationStatusByIdentity',
        });
    }
    /**
     * Get verification by Reference
     * Queries the verification result by sending the verification Reference. With this query you can get the result of a verification.
     * @param { VerificationStatusByReferenceRequestData } data - The data to provide to the API call.
     */
    async getByReference(data) {
        this.client = this.getSinchClient();
        const getParams = this.client.extractQueryParams(data, []);
        const headers = {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
        };
        const body = '';
        const path = `/verification/v1/verifications/reference/${data['reference']}`;
        const basePathUrl = this.client.apiClientOptions.hostname + path;
        const requestOptions = await this.client.prepareOptions(basePathUrl, 'GET', getParams, headers, body || undefined, path);
        const url = this.client.prepareUrl(requestOptions.hostname, requestOptions.queryParams);
        return this.client.processCall({
            url,
            requestOptions,
            apiName: this.apiName,
            operationId: 'VerificationStatusByReference',
        });
    }
}
exports.VerificationStatusApi = VerificationStatusApi;
//# sourceMappingURL=verification-status-api.js.map