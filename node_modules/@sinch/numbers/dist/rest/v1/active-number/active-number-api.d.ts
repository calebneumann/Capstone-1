import { ActiveNumber, GetActiveNumberRequestData, ListActiveNumbersRequestData, ReleaseNumberRequestData, UpdateActiveNumberRequestData } from '../../../models';
import { ApiListPromise, SinchClientParameters } from '@sinch/sdk-client';
import { NumbersDomainApi } from '../numbers-domain-api';
export declare class ActiveNumberApi extends NumbersDomainApi {
    /**
     * Initialize your interface with the provided API client.
     *
     * @param {SinchClientParameters} sinchClientParameters - The parameters used to initialize the API Client.
     */
    constructor(sinchClientParameters: SinchClientParameters);
    /**
     * Get active Number
     * Get a virtual number
    * @param {GetActiveNumberRequestData} data - The data to provide to the API call.
     */
    get(data: GetActiveNumberRequestData): Promise<ActiveNumber>;
    /**
     * List active numbers
     * Lists all virtual numbers for a project.
     * @param {ListActiveNumbersRequestData} data - The data to provide to the API call.
     * @return {ApiListPromise<ActiveNumber>}
     */
    list(data: ListActiveNumbersRequestData): ApiListPromise<ActiveNumber>;
    /**
     * Release number
     * With this endpoint, you can cancel your subscription for a specific virtual phone number.
     * @param {ReleaseNumberRequestData} data - The data to provide to the API call.
     */
    release(data: ReleaseNumberRequestData): Promise<ActiveNumber>;
    /**
     * Update active number
     * Update a virtual phone number. For example: you can configure SMS/Voice services or set a friendly name. To update the name that displays, modify the `displayName` parameter.
     * You'll use `smsConfiguration` to update your SMS configuration and `voiceConfiguration` to update the voice configuration.
     * @param {UpdateActiveNumberRequestData} data - The data to provide to the API call.
     */
    update(data: UpdateActiveNumberRequestData): Promise<ActiveNumber>;
}
