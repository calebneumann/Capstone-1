"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NumbersDomainApi = void 0;
const sdk_client_1 = require("@sinch/sdk-client");
class NumbersDomainApi {
    constructor(sinchClientParameters, apiName) {
        this.sinchClientParameters = sinchClientParameters;
        this.apiName = apiName;
    }
    /**
     * Update the default hostname for the API
     * @param {string} hostname - The new hostname to use for the APIs.
     */
    setHostname(hostname) {
        this.client = this.getSinchClient();
        this.client.apiClientOptions.hostname = hostname;
    }
    /**
     * Updates the credentials used to authenticate API requests
     * @param {UnifiedCredentials} credentials
     */
    setCredentials(credentials) {
        const parametersBackup = { ...this.sinchClientParameters };
        this.sinchClientParameters = {
            ...parametersBackup,
            ...credentials,
        };
        this.resetApiClient();
        try {
            this.getSinchClient();
        }
        catch (error) {
            console.error('Impossible to assign the new credentials to the Numbers API');
            this.sinchClientParameters = parametersBackup;
            throw error;
        }
    }
    resetApiClient() {
        this.client = undefined;
    }
    /**
     * Checks the configuration parameters are ok and initialize the API client. Once initialized, the same instance will
     * be returned for the subsequent API calls (singleton pattern)
     * @return {ApiClient} the API Client or throws an error in case the configuration parameters are not ok
     * @private
     */
    getSinchClient() {
        if (!this.client) {
            const apiClientOptions = (0, sdk_client_1.buildOAuth2ApiClientOptions)(this.sinchClientParameters, 'Numbers');
            this.client = new sdk_client_1.ApiFetchClient(apiClientOptions);
            this.client.apiClientOptions.hostname = this.sinchClientParameters.numbersHostname ?? sdk_client_1.NUMBERS_HOSTNAME;
        }
        return this.client;
    }
}
exports.NumbersDomainApi = NumbersDomainApi;
//# sourceMappingURL=numbers-domain-api.js.map