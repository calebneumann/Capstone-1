import { ActiveNumber, AvailableNumber, AvailableNumbersResponse, GetAvailableNumberRequestData, ListAvailableNumbersRequestData, RentAnyNumberRequestData, RentNumberRequestData } from '../../../models';
import { SinchClientParameters } from '@sinch/sdk-client';
import { NumbersDomainApi } from '../numbers-domain-api';
export declare class AvailableNumberApi extends NumbersDomainApi {
    /**
     * Initialize your interface with the provided API client.
     *
     * @param {SinchClientParameters} sinchClientParameters - The parameters used to initialize the API Client.
     */
    constructor(sinchClientParameters: SinchClientParameters);
    /**
     * Get available number
     * This endpoint allows you to enter a specific phone number to check if it\&#39;s available for use. A 200 response will return the number\&#39;s capability, setup costs, monthly costs and if supporting documentation is required.
     * @param {GetAvailableNumberRequestData} data - The data to provide to the API call.
     */
    checkAvailability(data: GetAvailableNumberRequestData): Promise<AvailableNumber>;
    /**
     * List available numbers
     * Search for virtual numbers that are available for you to activate. You can filter by any property on the available number resource.
     * @param {ListAvailableNumbersRequestData} data - The data to provide to the API call.
     */
    list(data: ListAvailableNumbersRequestData): Promise<AvailableNumbersResponse>;
    /**
     * Rent any number that matches the criteria
     * Search for and activate an available Sinch virtual number all in one API call. Currently, the rentAny operation works only for US 10DLC numbers
     * @param {RentAnyNumberRequestData} data - The data to provide to the API call.
     */
    rentAny(data: RentAnyNumberRequestData): Promise<ActiveNumber>;
    /**
     * Rent an available number
     * Activate a virtual number to use with SMS products, Voice products, or both. You'll use 'smsConfiguration' to set up your number for SMS and 'voiceConfiguration' for Voice.
     * @param {RentNumberRequestData} data - The data to provide to the API call.
     */
    rent(data: RentNumberRequestData): Promise<ActiveNumber>;
}
