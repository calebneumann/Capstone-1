/// <reference types="node" />
import { CallbackPayload } from '../../../models';
import { IncomingHttpHeaders } from 'http';
import { CallbackProcessor } from '@sinch/sdk-client';
export type NumbersCallback = CallbackPayload;
export declare class NumbersCallbackWebhooks implements CallbackProcessor<CallbackPayload> {
    private readonly callbackSecret;
    constructor(callbackSecret: string);
    /**
     * Validate authorization header for callback request
     * @param {IncomingHttpHeaders} headers - Incoming request's headers
     * @param {any} body - Incoming request's body
     * @param {string} _path - Incoming request's path
     * @param {string} _method - Incoming request's HTTP method
     * @return {boolean} - true if the X-Sinch-Signature header is valid
     */
    validateAuthenticationHeader(headers: IncomingHttpHeaders, body: any, _path?: string, _method?: string): boolean;
    /**
     * Reviver for a Numbers Event.
     * This method ensures the object can be treated as a Numbers Event and should be called before any action is taken to manipulate the object.
     * Indeed, the server returns the timestamp without the timezone information => this method updates the property value to use the Zulu timezone and changes the parameters to a Date
     * @param {any} eventBody - The event body containing the numbers event notification.
     * @return {NumbersCallback} - The parsed voice event object.
     */
    parseEvent(eventBody: any): NumbersCallback;
}
