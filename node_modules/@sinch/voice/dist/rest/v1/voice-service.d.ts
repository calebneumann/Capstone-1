import { SinchClientParameters, VoiceRegion } from '@sinch/sdk-client';
import { ApplicationsApi } from './applications';
import { ConferencesApi } from './conferences';
import { CallsApi } from './calls';
import { CalloutsApi } from './callouts';
/**
 * The Voice Service exposes the following APIs:
 * - applications
 * - callouts
 * - conferences
 * - calls
 */
export declare class VoiceService {
    readonly applications: ApplicationsApi;
    readonly conferences: ConferencesApi;
    readonly calls: CallsApi;
    readonly callouts: CalloutsApi;
    /**
     * Create a new VoiceService instance with its configuration. It needs the following parameters for authentication:
     * - `applicationKey`
     * - `applicationSecret`
     *
     * Other supported properties:
     * - `voiceRegion`
     * - `voiceHostname`
     * - `voiceApplicationManagementHostname`
     * @param {SinchClientParameters} params - an Object containing the necessary properties to initialize the service
     */
    constructor(params: SinchClientParameters);
    /**
     * Update the default hostname for each API except Applications
     * @param {string} hostname - The new hostname to use for all the APIs except Applications.
     */
    setHostname(hostname: string): void;
    /**
     * Update the default hostname for the Applications API
     * @param {string} hostname - The new hostname to use for the Applications API.
     */
    setApplicationsManagementHostname(hostname: string): void;
    /**
     * Update the current region for each API
     * @param {VoiceRegion} region - The new region to use in the production URL
     */
    setRegion(region: VoiceRegion): void;
}
