import { CalloutResponse, ConferenceCalloutRequestData, GetConferenceInfoRequestData, GetConferenceInfoResponse, KickAllRequestData, KickParticipantRequestData, ManageParticipantRequestData } from '../../../models/';
import { SinchClientParameters } from '@sinch/sdk-client';
import { VoiceDomainApi } from '../voice-domain-api';
export declare class ConferencesApi extends VoiceDomainApi {
    private calloutApi;
    /**
     * Initialize your interface
     *
     * @param {SinchClientParameters} sinchClientParameters - The parameters used to initialize the API Client.
     */
    constructor(sinchClientParameters: SinchClientParameters);
    /**
     * Conference Callout Request
     * Makes a conference callout to a phone number.
     * @param { ConferenceCalloutRequestData } data - The data to provide to the API call.
     */
    call(data: ConferenceCalloutRequestData): Promise<CalloutResponse>;
    /**
     * Get Conference Info
     * Returns information about a conference that matches the provided conference ID.
     * @param { GetConferenceInfoRequestData } data - The data to provide to the API call.
     */
    get(data: GetConferenceInfoRequestData): Promise<GetConferenceInfoResponse>;
    /**
     * Kick Conference All
     * Removes all participants from a conference.
     * @param { KickAllRequestData } data - The data to provide to the API call.
     */
    kickAll(data: KickAllRequestData): Promise<void>;
    /**
     * Kick Conference Participant
     * Remove a specified conference participant from a specified conference.
     * @param { KickParticipantRequestData } data - The data to provide to the API call.
     */
    kickParticipant(data: KickParticipantRequestData): Promise<void>;
    /**
     * Manage Conference Participant
     * Manages conference participant in a specified conference: * mute / unmute * put on hold / resume.
     * @param { ManageParticipantRequestData } data - The data to provide to the API call.
     */
    manageParticipant(data: ManageParticipantRequestData): Promise<void>;
}
