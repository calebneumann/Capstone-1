import { SinchClientParameters } from '@sinch/sdk-client';
import { CreateWebhookRequestData, DeleteWebhookRequestData, GetWebhookRequestData, ListWebhooksRequestData, ListWebhooksResponse, UpdateWebhookRequestData, Webhook } from '../../../models';
import { ConversationDomainApi } from '../conversation-domain-api';
export declare class WebhooksApi extends ConversationDomainApi {
    /**
     * Initialize your interface
     *
     * @param {SinchClientParameters} sinchClientParameters - The parameters used to initialize the API Client.
     */
    constructor(sinchClientParameters: SinchClientParameters);
    /**
     * Create a new webhook
     * Creates a webhook for receiving callbacks on specific triggers. You can create up to 5 webhooks per app.
     * @param { CreateWebhookRequestData } data - The data to provide to the API call.
     */
    create(data: CreateWebhookRequestData): Promise<Webhook>;
    /**
     * Delete an existing webhook
     * Deletes a webhook as specified by the webhook ID.
     * @param { DeleteWebhookRequestData } data - The data to provide to the API call.
     */
    delete(data: DeleteWebhookRequestData): Promise<any>;
    /**
     * Get a webhook
     * Get a webhook as specified by the webhook ID.
     * @param { GetWebhookRequestData } data - The data to provide to the API call.
     */
    get(data: GetWebhookRequestData): Promise<Webhook>;
    /**
     * List webhooks
     * List all webhooks for a given app as specified by the App ID.
     * @param { ListWebhooksRequestData } data - The data to provide to the API call.
     */
    list(data: ListWebhooksRequestData): Promise<ListWebhooksResponse>;
    /**
     * Update an existing webhook
     * Updates an existing webhook as specified by the webhook ID.
     * @param { UpdateWebhookRequestData } data - The data to provide to the API call.
     */
    update(data: UpdateWebhookRequestData): Promise<Webhook>;
}
