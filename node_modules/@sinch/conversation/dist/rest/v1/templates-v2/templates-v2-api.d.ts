import { V2CreateTemplateRequestData, V2DeleteTemplateRequestData, V2GetTemplateRequestData, V2ListTemplatesRequestData, V2ListTemplatesResponse, V2ListTranslationsRequestData, V2ListTranslationsResponse, V2TemplateResponse, V2UpdateTemplateRequestData } from '../../../models';
import { SinchClientParameters } from '@sinch/sdk-client';
import { ConversationDomainApi } from '../conversation-domain-api';
export declare class TemplatesV2Api extends ConversationDomainApi {
    /**
     * Initialize your interface
     *
     * @param {SinchClientParameters} sinchClientParameters - The parameters used to initialize the API Client.
     */
    constructor(sinchClientParameters: SinchClientParameters);
    /**
     * Creates a template
     *
     * @param { V2CreateTemplateRequestData } data - The data to provide to the API call.
     */
    create(data: V2CreateTemplateRequestData): Promise<V2TemplateResponse>;
    /**
     * Delete a template.
     *
     * @param { V2DeleteTemplateRequestData } data - The data to provide to the API call.
     */
    delete(data: V2DeleteTemplateRequestData): Promise<any>;
    /**
     * Get a template
     *
     * @param { V2GetTemplateRequestData } data - The data to provide to the API call.
     */
    get(data: V2GetTemplateRequestData): Promise<V2TemplateResponse>;
    /**
     * List all templates belonging to a project ID.
     *
     * @param { V2ListTemplatesRequestData } data - The data to provide to the API call.
     */
    list(data: V2ListTemplatesRequestData): Promise<V2ListTemplatesResponse>;
    /**
     * List translations for a template
     *
     * @param { V2ListTranslationsRequestData } data - The data to provide to the API call.
     */
    listTranslations(data: V2ListTranslationsRequestData): Promise<V2ListTranslationsResponse>;
    /**
     * Updates a template.
     *
     * @param { V2UpdateTemplateRequestData } data - The data to provide to the API call.
     */
    update(data: V2UpdateTemplateRequestData): Promise<V2TemplateResponse>;
}
