/// <reference types="jest" />
import { ApiListPromise } from '@sinch/sdk-client';
import { MessagesApi } from './messages-api';
import { ConversationMessage, Recipient, SendMessageResponse, DeleteMessageRequestData, GetMessageRequestData, ListMessagesRequestData, UpdateMessageRequestData, SendCardMessageRequestData, SendTextMessageRequestData, SendCarouselMessageRequestData, SendChoiceMessageRequestData, SendContactInfoMessageRequestData, SendListMessageRequestData, SendLocationMessageRequestData, SendMediaMessageRequestData, SendTemplateMessageRequestData, SendMessageRequestData } from '../../../models';
export declare class MessagesApiFixture implements Partial<Readonly<MessagesApi>> {
    /**
     * Fixture associated to function delete
     */
    delete: jest.Mock<Promise<any>, [DeleteMessageRequestData]>;
    /**
     * Fixture associated to function get
     */
    get: jest.Mock<Promise<ConversationMessage>, [GetMessageRequestData]>;
    /**
     * Fixture associated to function list
     */
    list: jest.Mock<ApiListPromise<ConversationMessage>, [ListMessagesRequestData]>;
    /**
     * Fixture associated to function sendCardMessage
     */
    sendCardMessage: jest.Mock<Promise<SendMessageResponse>, [
        SendCardMessageRequestData<Recipient>
    ]>;
    /**
     * Fixture associated to function sendTextMessage
     */
    sendCarouselMessage: jest.Mock<Promise<SendMessageResponse>, [
        SendCarouselMessageRequestData<Recipient>
    ]>;
    /**
     * Fixture associated to function sendTextMessage
     */
    sendChoiceMessage: jest.Mock<Promise<SendMessageResponse>, [
        SendChoiceMessageRequestData<Recipient>
    ]>;
    /**
     * Fixture associated to function sendTextMessage
     */
    sendContactInfoMessage: jest.Mock<Promise<SendMessageResponse>, [
        SendContactInfoMessageRequestData<Recipient>
    ]>;
    /**
     * Fixture associated to function sendTextMessage
     */
    sendListMessage: jest.Mock<Promise<SendMessageResponse>, [
        SendListMessageRequestData<Recipient>
    ]>;
    /**
     * Fixture associated to function sendTextMessage
     */
    sendLocationMessage: jest.Mock<Promise<SendMessageResponse>, [
        SendLocationMessageRequestData<Recipient>
    ]>;
    /**
     * Fixture associated to function sendTextMessage
     */
    sendMediaMessage: jest.Mock<Promise<SendMessageResponse>, [
        SendMediaMessageRequestData<Recipient>
    ]>;
    /**
     * Fixture associated to function sendTextMessage
     */
    sendTemplateMessage: jest.Mock<Promise<SendMessageResponse>, [
        SendTemplateMessageRequestData<Recipient>
    ]>;
    /**
     * Fixture associated to function sendTextMessage
     */
    sendTextMessage: jest.Mock<Promise<SendMessageResponse>, [
        SendTextMessageRequestData<Recipient>
    ]>;
    /**
     * Fixture associated to function send
     */
    send: jest.Mock<Promise<SendMessageResponse>, [
        SendMessageRequestData<Recipient>
    ]>;
    /**
     * Fixture associated to function update
     */
    update: jest.Mock<Promise<ConversationMessage>, [UpdateMessageRequestData]>;
}
