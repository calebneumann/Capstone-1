import { SinchClientParameters, SmsRegion } from '@sinch/sdk-client';
import { GroupsApi } from './groups';
import { DeliveryReportsApi } from './delivery-reports';
import { BatchesApi } from './batches';
import { InboundsApi } from './inbounds';
/**
 * The SMS Service exposes the following APIs:
 *  - groups
 *  - batches
 *  - inbounds
 *  - deliveryReports
 */
export declare class SmsService {
    readonly groups: GroupsApi;
    readonly deliveryReports: DeliveryReportsApi;
    readonly batches: BatchesApi;
    readonly inbounds: InboundsApi;
    /**
     * Create a new SmsService instance with its configuration. This service can be instantiated with 2 different authentication mechanisms:
     * - OAuth2: the required properties are `projectId`, `keyId` and `keySecret`
     * - API Token: the required properties are `servicePlanId` and `apiToken`
     *
     * Other supported properties:
     *  - `smsRegion`
     *  - `smsHostname`
     *  - `forceOAuth2ForSmsApi`
     *  - `forceServicePlanIdUsageForSmsApi`
     * @param {SinchClientParameters} params - an Object containing the necessary properties to initialize the service
     */
    constructor(params: SinchClientParameters);
    /**
     * Update the default hostname for each API
     * @param {string} hostname - The new hostname to use for all the APIs.
     */
    setHostname(hostname: string): void;
    /**
     * Update the current region for each API
     * @param {SmsRegion} region - The new region to use in the production URL
     */
    setRegion(region: SmsRegion): void;
}
